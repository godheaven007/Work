layui.define(function(exports){

    var param = {
        required: {
            reg: /[\S]+/,
            msg: '必填项不能为空'
        },
        // 收入占比
        incomeRatio: {
            reg: /^(0|[1-9]\d?|100)$/,
            msg: '收入占比只能填写0~100的整数'
        },
        // 面积
        square: {
            reg:/^(0(\.[1-9])|0(\.[0-9][1-9])|0(\.[1-9][0-9])|[1-9](\.[0-9]{1,2}){0,1}|[1-9][0-9]{0,7}(\.[0-9]{1,2}){0,1})$/,
            msg: '面积支持非零的最大8位整数允许2位小数'
        },
        // 日期
        date: {
          reg: /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/,
          msg: '日期格式不正确'
        },
        customDate: {
            reg: /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/,
            msg: '日期格式不正确'
        },
        space: {
            reg: /\s/,
            msg: '不能含有空格'
        },
        chinese: {
            reg: /[\u4e00-\u9fa5]/,
            msg: '不能包含中文'
        },
        pwd: {
            reg: /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^.{6,20}$/,
            msg: '密码必须使用6-20个字内的数字、英文字母及特殊符号的组合'
        },
        onlyDecmal5: {
            reg: /^([0-9](\.[0-9]{1,2}){0,1}|[1-9][0-9]{0,4}(\.[0-9]{1,2}){0,1})$/,
            msg: '仅支持最大5位整数允许2位小数'
        },
        onlyDecmal9: {
            reg: /^([0-9](\.[0-9]{1,2}){0,1}|[1-9][0-9]{0,8}(\.[0-9]{1,2}){0,1})$/,
            msg: '仅支持最大9位整数允许2位小数'
        },
        onlyDecmal9Ex0: {
            reg:/^(0(\.[1-9])|0(\.[0-9][1-9])|0(\.[1-9][0-9])|[1-9](\.[0-9]{1,2}){0,1}|[1-9][0-9]{0,8}(\.[0-9]{1,2}){0,1})$/,
            msg:'仅支持非零的最大9位整数允许2位小数'
        },
        onlyDecmal8: {
            reg: /^([0-9](\.[0-9]{1,2}){0,1}|[1-9][0-9]{0,7}(\.[0-9]{1,2}){0,1})$/,
            msg: '仅支持最大8位整数允许2位小数'
        },
        onlyDecmal8Ex0: {
            reg: /^(0(\.[1-9])|0(\.[0-9][1-9])|0(\.[1-9][0-9])|[1-9](\.[0-9]{1,2}){0,1}|[1-9][0-9]{0,7}(\.[0-9]{1,2}){0,1})$/,
            msg: '只支持非零的最大8位整数允许2位小数'
        },
        positiveInteger: {
            reg: /^[0-9]*[1-9][0-9]*$/,
            msg: '只支持数字'
        },
        phone: {
            reg: /^1\d{10}$/,
            msg: '手机号格式不正确'
        },
        only1to255: {
            reg: /^(25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|[1-9])$/,
            msg: '仅支持1~255的整数'
        },
        onlyOneInteger: {
            reg: /^([1-9]|[1-9][0-9]+)$/,
            msg: '仅支持正整数'
        },
        digit10: {
            reg: /^(\d{10})/,
            msg: '10位纯数字'
        },
        appletKey: {
            reg: /^[A-Za-z0-9]{32}/,
            msg: '请输入32个字符，只允许输入数字和英文大小写字母的组合'
}

    };

    // 注意，这里是模块输出的核心，模块名必须和use时的模块名一致
    exports('Regex', param);
});